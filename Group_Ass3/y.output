Terminals unused in grammar

    SINGLE_COMMENT
    MULTILINE_COMMENT
    ENUM
    STRUCT
    TYPEDEF
    UNION
    HASH


Grammar

    0 $accept: start_symbol $end

    1 constant: INTEGER
    2         | FLOATING_CONSTANT
    3         | CHARACTER_CONSTANT

    4 primary_expression: IDENTIFIER
    5                   | constant
    6                   | STRING_LITERAL
    7                   | ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE

    8 postfix_expression: primary_expression
    9                   | postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   10                   | postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
   11                   | postfix_expression DOT IDENTIFIER
   12                   | postfix_expression IMPLIES IDENTIFIER
   13                   | postfix_expression INCREMENT
   14                   | postfix_expression DECREMENT
   15                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

   17 argument_expression_list_opt: ε
   18                             | argument_expression_list

   19 argument_expression_list: assignment_expression
   20                         | argument_expression_list COMMA assignment_expression

   21 unary_expression: postfix_expression
   22                 | INCREMENT unary_expression
   23                 | DECREMENT unary_expression
   24                 | unary_operator cast_expression
   25                 | SIZEOF unary_expression
   26                 | SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

   27 unary_operator: BITWISE_AND
   28               | MUL
   29               | PLUS
   30               | MINUS
   31               | BITWISE_NOT
   32               | NOT

   33 cast_expression: unary_expression
   34                | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression

   35 multiplicative_expression: cast_expression
   36                          | multiplicative_expression MUL cast_expression
   37                          | multiplicative_expression DIV cast_expression
   38                          | multiplicative_expression MOD cast_expression

   39 additive_expression: multiplicative_expression
   40                    | additive_expression PLUS multiplicative_expression
   41                    | additive_expression MINUS multiplicative_expression

   42 shift_expression: additive_expression
   43                 | shift_expression LEFT_SHIFT additive_expression
   44                 | shift_expression RIGHT_SHIFT additive_expression

   45 relational_expression: shift_expression
   46                      | relational_expression LESS_THAN shift_expression
   47                      | relational_expression GREATER_THAN shift_expression
   48                      | relational_expression LESS_EQUAL shift_expression
   49                      | relational_expression GREATER_EQUAL shift_expression

   50 equality_expression: relational_expression
   51                    | equality_expression EQUAL relational_expression
   52                    | equality_expression NOT_EQUAL relational_expression

   53 and_expression: equality_expression
   54               | and_expression BITWISE_AND equality_expression

   55 exclusive_or_expression: and_expression
   56                        | exclusive_or_expression BITWISE_XOR and_expression

   57 inclusive_or_expression: exclusive_or_expression
   58                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   59 logical_and_expression: inclusive_or_expression
   60                       | logical_and_expression AND inclusive_or_expression

   61 logical_or_expression: logical_and_expression
   62                      | logical_or_expression OR logical_and_expression

   63 conditional_expression: logical_or_expression
   64                       | logical_or_expression newstatement QUESTION countinst expression newstatement COLON countinst conditional_expression

   65 countinst: ε

   66 newstatement: ε

   67 assignment_expression: conditional_expression
   68                      | unary_expression ASSIGN assignment_expression
   69                      | unary_expression MUL_EQUAL assignment_expression
   70                      | unary_expression DIV_EQUAL assignment_expression
   71                      | unary_expression MOD_EQUAL assignment_expression
   72                      | unary_expression PLUS_EQUAL assignment_expression
   73                      | unary_expression MINUS_EQUAL assignment_expression
   74                      | unary_expression SHIFT_LEFT_EQUAL assignment_expression
   75                      | unary_expression SHIFT_RIGHT_EQUAL assignment_expression
   76                      | unary_expression BITWISE_AND_EQUAL assignment_expression
   77                      | unary_expression BITWISE_XOR_EQUAL assignment_expression
   78                      | unary_expression BITWISE_OR_EQUAL assignment_expression

   79 expression: assignment_expression
   80           | expression COMMA assignment_expression

   81 constant_expression: conditional_expression

   82 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON

   83 declaration_specifiers: storage_class_specifier
   84                       | type_specifier
   85                       | type_qualifier
   86                       | function_specifier
   87                       | storage_class_specifier declaration_specifiers
   88                       | type_specifier declaration_specifiers
   89                       | type_qualifier declaration_specifiers
   90                       | function_specifier declaration_specifiers

   91 init_declarator_list_opt: ε
   92                         | init_declarator_list

   93 init_declarator_list: init_declarator
   94                     | init_declarator_list COMMA init_declarator

   95 init_declarator: declarator
   96                | declarator ASSIGN initializer

   97 storage_class_specifier: EXTERN
   98                        | AUTO
   99                        | REGISTER
  100                        | STATIC

  101 type_specifier: VOID
  102               | CHAR
  103               | SHORT
  104               | INT
  105               | LONG
  106               | FLOAT
  107               | SIGNED
  108               | UNSIGNED
  109               | BOOL
  110               | COMPLEX
  111               | IMAGINARY
  112               | DOUBLE

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list
  114                         | type_qualifier specifier_qualifier_list
  115                         | type_specifier
  116                         | type_qualifier

  117 type_qualifier: CONST
  118               | RESTRICT
  119               | VOLATILE

  120 function_specifier: INLINE

  121 declarator: pointer direct_declarator
  122           | direct_declarator

  123 direct_declarator: IDENTIFIER
  124                  | ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE
  125                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression_opt SQUARE_BRACKET_CLOSE
  126                  | direct_declarator SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  127                  | direct_declarator SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  128                  | direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  129                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  130                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  131                  | direct_declarator ROUND_BRACKET_OPEN switch_table parameter_type_list ROUND_BRACKET_CLOSE
  132                  | direct_declarator ROUND_BRACKET_OPEN switch_table ROUND_BRACKET_CLOSE
  133                  | direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE

  134 switch_table: ε

  135 type_qualifier_list_opt: ε
  136                        | type_qualifier_list

  137 assignment_expression_opt: ε
  138                          | assignment_expression

  139 pointer: MUL type_qualifier_list_opt
  140        | MUL type_qualifier_list_opt pointer

  141 type_qualifier_list: type_qualifier
  142                    | type_qualifier_list type_qualifier

  143 parameter_type_list: parameter_list
  144                    | parameter_list COMMA ELLIPSIS

  145 parameter_list: parameter_declaration
  146               | parameter_list COMMA parameter_declaration

  147 parameter_declaration: declaration_specifiers declarator
  148                      | declaration_specifiers

  149 identifier_list: IDENTIFIER
  150                | identifier_list COMMA IDENTIFIER

  151 type_name: specifier_qualifier_list

  152 initializer: assignment_expression
  153            | CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  154            | CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

  155 initializer_list: designation_opt initializer
  156                 | initializer_list COMMA designation_opt initializer

  157 designation_opt: designation
  158                | ε

  159 designation: designator_list ASSIGN

  160 designator_list: designator
  161                | designator_list designator

  162 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE
  163           | DOT IDENTIFIER

  164 statement: labeled_statement
  165          | compound_statement
  166          | expression_statement
  167          | selection_statement
  168          | iteration_statement
  169          | jump_statement

  170 loop_block: labeled_statement
  171           | expression_statement
  172           | selection_statement
  173           | iteration_statement
  174           | jump_statement

  175 labeled_statement: IDENTIFIER COLON statement
  176                  | CASE constant_expression COLON statement
  177                  | DEFAULT COLON statement

  178 compound_statement: CURLY_BRACKET_OPEN createST switch_table block_item_list_opt CURLY_BRACKET_CLOSE

  179 createST: ε

  180 block_item_list_opt: ε
  181                    | block_item_list

  182 block_item_list: block_item
  183                | block_item_list countinst block_item

  184 block_item: declaration
  185           | statement

  186 expression_statement: expression_opt SEMICOLON

  187 expression_opt: ε
  188               | expression

  189 selection_statement: IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst statement newstatement
  190                    | IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst statement newstatement ELSE countinst statement
  191                    | SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

  192 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst loop_block
  193                    | WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  194                    | DO dostart countinst loop_block countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  195                    | DO dostart countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  196                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  198                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

  200 forstart: ε

  201 whilestart: ε

  202 dostart: ε

  203 jump_statement: GOTO IDENTIFIER SEMICOLON
  204               | CONTINUE SEMICOLON
  205               | BREAK SEMICOLON
  206               | RETURN expression_opt SEMICOLON

  207 start_symbol: translation_unit

  208 translation_unit: external_declaration
  209                 | translation_unit external_declaration

  210 external_declaration: function_definition
  211                     | declaration

  212 function_definition: declaration_specifiers declarator declaration_list_opt CURLY_BRACKET_OPEN switch_table block_item_list_opt CURLY_BRACKET_CLOSE

  213 declaration_list_opt: ε
  214                     | declaration_list

  215 declaration_list: declaration
  216                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SINGLE_COMMENT (258)
    MULTILINE_COMMENT (259)
    AUTO (260) 98
    BREAK (261) 205
    CASE (262) 176
    CHAR (263) 102
    CONST (264) 117
    CONTINUE (265) 204
    DEFAULT (266) 177
    DO (267) 194 195
    DOUBLE (268) 112
    ELSE (269) 190
    ENUM (270)
    EXTERN (271) 97
    REGISTER (272) 99
    FLOAT (273) 106
    FOR (274) 196 197 198 199
    GOTO (275) 203
    IF (276) 189 190
    INLINE (277) 120
    INT (278) 104
    LONG (279) 105
    RESTRICT (280) 118
    RETURN (281) 206
    SHORT (282) 103
    SIGNED (283) 107
    SIZEOF (284) 25 26
    STATIC (285) 100 128 129
    STRUCT (286)
    SWITCH (287) 191
    TYPEDEF (288)
    UNION (289)
    UNSIGNED (290) 108
    VOID (291) 101
    VOLATILE (292) 119
    WHILE (293) 192 193 194 195
    BOOL (294) 109
    COMPLEX (295) 110
    IMAGINARY (296) 111
    SQUARE_BRACKET_OPEN (297) 9 125 126 127 128 129 130 162
    SQUARE_BRACKET_CLOSE (298) 9 125 126 127 128 129 130 162
    ROUND_BRACKET_OPEN (299) 7 10 15 16 26 34 124 131 132 133 189 190 191 192 193 194 195 196 197 198 199
    ROUND_BRACKET_CLOSE (300) 7 10 15 16 26 34 124 131 132 133 189 190 191 192 193 194 195 196 197 198 199
    CURLY_BRACKET_OPEN (301) 15 16 153 154 178 193 195 197 199 212
    CURLY_BRACKET_CLOSE (302) 15 16 153 154 178 193 195 197 199 212
    DOT (303) 11 163
    IMPLIES (304) 12
    INCREMENT (305) 13 22
    DECREMENT (306) 14 23
    BITWISE_AND (307) 27 54
    MUL (308) 28 36 130 139 140
    PLUS (309) 29 40
    MINUS (310) 30 41
    BITWISE_NOT (311) 31
    NOT (312) 32
    DIV (313) 37
    MOD (314) 38
    LEFT_SHIFT (315) 43
    RIGHT_SHIFT (316) 44
    LESS_THAN (317) 46
    GREATER_THAN (318) 47
    LESS_EQUAL (319) 48
    GREATER_EQUAL (320) 49
    EQUAL (321) 51
    NOT_EQUAL (322) 52
    BITWISE_XOR (323) 56
    BITWISE_OR (324) 58
    AND (325) 60
    OR (326) 62
    QUESTION (327) 64
    COLON (328) 64 175 176 177
    SEMICOLON (329) 82 186 194 195 196 197 198 199 203 204 205 206
    ELLIPSIS (330) 144
    ASSIGN (331) 68 96 159
    MUL_EQUAL (332) 69
    DIV_EQUAL (333) 70
    MOD_EQUAL (334) 71
    PLUS_EQUAL (335) 72
    MINUS_EQUAL (336) 73
    SHIFT_LEFT_EQUAL (337) 74
    SHIFT_RIGHT_EQUAL (338) 75
    BITWISE_AND_EQUAL (339) 76
    BITWISE_XOR_EQUAL (340) 77
    BITWISE_OR_EQUAL (341) 78
    COMMA (342) 16 20 80 94 144 146 150 154 156
    HASH (343)
    IDENTIFIER <SymbolPointer> (344) 4 11 12 123 149 150 163 175 203
    INTEGER <INTVAL> (345) 1
    FLOATING_CONSTANT <FLOATVAL> (346) 2
    CHARACTER_CONSTANT <CHARVAL> (347) 3
    STRING_LITERAL <CHARVAL> (348) 6
    THEN (349)


Nonterminals, with rules where they appear

    $accept (95)
        on left: 0
    constant <Express> (96)
        on left: 1 2 3
        on right: 5
    primary_expression <Express> (97)
        on left: 4 5 6 7
        on right: 8
    postfix_expression <Array> (98)
        on left: 8 9 10 11 12 13 14 15 16
        on right: 9 10 11 12 13 14 21
    argument_expression_list_opt <Parameter> (99)
        on left: 17 18
        on right: 10
    argument_expression_list <Parameter> (100)
        on left: 19 20
        on right: 18 20
    unary_expression <Array> (101)
        on left: 21 22 23 24 25 26
        on right: 22 23 25 33 68 69 70 71 72 73 74 75 76 77 78
    unary_operator <UnaryOper> (102)
        on left: 27 28 29 30 31 32
        on right: 24
    cast_expression <Array> (103)
        on left: 33 34
        on right: 24 34 35 36 37 38
    multiplicative_expression <Express> (104)
        on left: 35 36 37 38
        on right: 36 37 38 39 40 41
    additive_expression <Express> (105)
        on left: 39 40 41
        on right: 40 41 42 43 44
    shift_expression <Express> (106)
        on left: 42 43 44
        on right: 43 44 45 46 47 48 49
    relational_expression <Express> (107)
        on left: 45 46 47 48 49
        on right: 46 47 48 49 50 51 52
    equality_expression <Express> (108)
        on left: 50 51 52
        on right: 51 52 53 54
    and_expression <Express> (109)
        on left: 53 54
        on right: 54 55 56
    exclusive_or_expression <Express> (110)
        on left: 55 56
        on right: 56 57 58
    inclusive_or_expression <Express> (111)
        on left: 57 58
        on right: 58 59 60
    logical_and_expression <Express> (112)
        on left: 59 60
        on right: 60 61 62
    logical_or_expression <Express> (113)
        on left: 61 62
        on right: 62 63 64
    conditional_expression <Express> (114)
        on left: 63 64
        on right: 64 67 81
    countinst <InstCount> (115)
        on left: 65
        on right: 64 183 189 190 192 193 194 195 196 197 198 199
    newstatement <Stateme> (116)
        on left: 66
        on right: 64 189 190 196 197 198 199
    assignment_expression <Express> (117)
        on left: 67 68 69 70 71 72 73 74 75 76 77 78
        on right: 19 20 68 69 70 71 72 73 74 75 76 77 78 79 80 126 128 129 138 152
    expression <Express> (118)
        on left: 79 80
        on right: 7 9 64 80 188 189 190 191 192 193 194 195
    constant_expression <Express> (119)
        on left: 81
        on right: 162 176
    declaration <SymbolPointer> (120)
        on left: 82
        on right: 184 198 199 211 215 216
    declaration_specifiers <Express> (121)
        on left: 83 84 85 86 87 88 89 90
        on right: 82 87 88 89 90 147 148 212
    init_declarator_list_opt <Express> (122)
        on left: 91 92
        on right: 82
    init_declarator_list <Express> (123)
        on left: 93 94
        on right: 92 94
    init_declarator <SymbolPointer> (124)
        on left: 95 96
        on right: 93 94
    storage_class_specifier <Express> (125)
        on left: 97 98 99 100
        on right: 83 87
    type_specifier <Express> (126)
        on left: 101 102 103 104 105 106 107 108 109 110 111 112
        on right: 84 88 113 115
    specifier_qualifier_list <Express> (127)
        on left: 113 114 115 116
        on right: 113 114 151
    type_qualifier <Express> (128)
        on left: 117 118 119
        on right: 85 89 114 116 141 142
    function_specifier <Express> (129)
        on left: 120
        on right: 86 90
    declarator <SymbolPointer> (130)
        on left: 121 122
        on right: 95 96 124 147 212
    direct_declarator <SymbolPointer> (131)
        on left: 123 124 125 126 127 128 129 130 131 132 133
        on right: 121 122 125 126 127 128 129 130 131 132 133
    switch_table (132)
        on left: 134
        on right: 131 132 178 192 193 196 197 198 199 212
    type_qualifier_list_opt <Express> (133)
        on left: 135 136
        on right: 128 139 140
    assignment_expression_opt <Express> (134)
        on left: 137 138
        on right: 125
    pointer <Type> (135)
        on left: 139 140
        on right: 121 140
    type_qualifier_list <Express> (136)
        on left: 141 142
        on right: 125 129 130 136 142
    parameter_type_list <Express> (137)
        on left: 143 144
        on right: 131
    parameter_list <Express> (138)
        on left: 145 146
        on right: 143 144 146
    parameter_declaration <Express> (139)
        on left: 147 148
        on right: 145 146
    identifier_list <Express> (140)
        on left: 149 150
        on right: 133 150
    type_name <Express> (141)
        on left: 151
        on right: 15 16 26 34
    initializer <SymbolPointer> (142)
        on left: 152 153 154
        on right: 96 155 156
    initializer_list <Express> (143)
        on left: 155 156
        on right: 15 16 153 154 156
    designation_opt <Express> (144)
        on left: 157 158
        on right: 155 156
    designation <Express> (145)
        on left: 159
        on right: 157
    designator_list <Express> (146)
        on left: 160 161
        on right: 159 161
    designator <Express> (147)
        on left: 162 163
        on right: 160 161
    statement <Stateme> (148)
        on left: 164 165 166 167 168 169
        on right: 175 176 177 185 189 190 191
    loop_block <Stateme> (149)
        on left: 170 171 172 173 174
        on right: 192 194 196 198
    labeled_statement <Stateme> (150)
        on left: 175 176 177
        on right: 164 170
    compound_statement <Stateme> (151)
        on left: 178
        on right: 165
    createST (152)
        on left: 179
        on right: 178 192 193 196 197 198 199
    block_item_list_opt <Stateme> (153)
        on left: 180 181
        on right: 178 193 195 197 199 212
    block_item_list <Stateme> (154)
        on left: 182 183
        on right: 181 183
    block_item <Stateme> (155)
        on left: 184 185
        on right: 182 183
    expression_statement <Express> (156)
        on left: 186
        on right: 166 171
    expression_opt <Express> (157)
        on left: 187 188
        on right: 186 196 197 198 199 206
    selection_statement <Stateme> (158)
        on left: 189 190 191
        on right: 167 172
    iteration_statement <Stateme> (159)
        on left: 192 193 194 195 196 197 198 199
        on right: 168 173
    forstart (160)
        on left: 200
        on right: 196 197 198 199
    whilestart (161)
        on left: 201
        on right: 192 193
    dostart (162)
        on left: 202
        on right: 194 195
    jump_statement <Stateme> (163)
        on left: 203 204 205 206
        on right: 169 174
    start_symbol (164)
        on left: 207
        on right: 0
    translation_unit <Express> (165)
        on left: 208 209
        on right: 207 209
    external_declaration <Express> (166)
        on left: 210 211
        on right: 208 209
    function_definition <Express> (167)
        on left: 212
        on right: 210
    declaration_list_opt <Express> (168)
        on left: 213 214
        on right: 212
    declaration_list <Express> (169)
        on left: 215 216
        on right: 214 216


State 0

    0 $accept: • start_symbol $end

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 11
    SHORT      shift, and go to state 12
    SIGNED     shift, and go to state 13
    STATIC     shift, and go to state 14
    UNSIGNED   shift, and go to state 15
    VOID       shift, and go to state 16
    VOLATILE   shift, and go to state 17
    BOOL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    IMAGINARY  shift, and go to state 20

    declaration              go to state 21
    declaration_specifiers   go to state 22
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    start_symbol             go to state 27
    translation_unit         go to state 28
    external_declaration     go to state 29
    function_definition      go to state 30


State 1

   98 storage_class_specifier: AUTO •

    $default  reduce using rule 98 (storage_class_specifier)


State 2

  102 type_specifier: CHAR •

    $default  reduce using rule 102 (type_specifier)


State 3

  117 type_qualifier: CONST •

    $default  reduce using rule 117 (type_qualifier)


State 4

  112 type_specifier: DOUBLE •

    $default  reduce using rule 112 (type_specifier)


State 5

   97 storage_class_specifier: EXTERN •

    $default  reduce using rule 97 (storage_class_specifier)


State 6

   99 storage_class_specifier: REGISTER •

    $default  reduce using rule 99 (storage_class_specifier)


State 7

  106 type_specifier: FLOAT •

    $default  reduce using rule 106 (type_specifier)


State 8

  120 function_specifier: INLINE •

    $default  reduce using rule 120 (function_specifier)


State 9

  104 type_specifier: INT •

    $default  reduce using rule 104 (type_specifier)


State 10

  105 type_specifier: LONG •

    $default  reduce using rule 105 (type_specifier)


State 11

  118 type_qualifier: RESTRICT •

    $default  reduce using rule 118 (type_qualifier)


State 12

  103 type_specifier: SHORT •

    $default  reduce using rule 103 (type_specifier)


State 13

  107 type_specifier: SIGNED •

    $default  reduce using rule 107 (type_specifier)


State 14

  100 storage_class_specifier: STATIC •

    $default  reduce using rule 100 (storage_class_specifier)


State 15

  108 type_specifier: UNSIGNED •

    $default  reduce using rule 108 (type_specifier)


State 16

  101 type_specifier: VOID •

    $default  reduce using rule 101 (type_specifier)


State 17

  119 type_qualifier: VOLATILE •

    $default  reduce using rule 119 (type_qualifier)


State 18

  109 type_specifier: BOOL •

    $default  reduce using rule 109 (type_specifier)


State 19

  110 type_specifier: COMPLEX •

    $default  reduce using rule 110 (type_specifier)


State 20

  111 type_specifier: IMAGINARY •

    $default  reduce using rule 111 (type_specifier)


State 21

  211 external_declaration: declaration •

    $default  reduce using rule 211 (external_declaration)


State 22

   82 declaration: declaration_specifiers • init_declarator_list_opt SEMICOLON
  212 function_definition: declaration_specifiers • declarator declaration_list_opt CURLY_BRACKET_OPEN switch_table block_item_list_opt CURLY_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 31
    MUL                 shift, and go to state 32
    IDENTIFIER          shift, and go to state 33

    $default  reduce using rule 91 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 34
    init_declarator_list      go to state 35
    init_declarator           go to state 36
    declarator                go to state 37
    direct_declarator         go to state 38
    pointer                   go to state 39


State 23

   83 declaration_specifiers: storage_class_specifier •
   87                       | storage_class_specifier • declaration_specifiers

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 11
    SHORT      shift, and go to state 12
    SIGNED     shift, and go to state 13
    STATIC     shift, and go to state 14
    UNSIGNED   shift, and go to state 15
    VOID       shift, and go to state 16
    VOLATILE   shift, and go to state 17
    BOOL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    IMAGINARY  shift, and go to state 20

    $default  reduce using rule 83 (declaration_specifiers)

    declaration_specifiers   go to state 40
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 24

   84 declaration_specifiers: type_specifier •
   88                       | type_specifier • declaration_specifiers

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 11
    SHORT      shift, and go to state 12
    SIGNED     shift, and go to state 13
    STATIC     shift, and go to state 14
    UNSIGNED   shift, and go to state 15
    VOID       shift, and go to state 16
    VOLATILE   shift, and go to state 17
    BOOL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    IMAGINARY  shift, and go to state 20

    $default  reduce using rule 84 (declaration_specifiers)

    declaration_specifiers   go to state 41
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 25

   85 declaration_specifiers: type_qualifier •
   89                       | type_qualifier • declaration_specifiers

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 11
    SHORT      shift, and go to state 12
    SIGNED     shift, and go to state 13
    STATIC     shift, and go to state 14
    UNSIGNED   shift, and go to state 15
    VOID       shift, and go to state 16
    VOLATILE   shift, and go to state 17
    BOOL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    IMAGINARY  shift, and go to state 20

    $default  reduce using rule 85 (declaration_specifiers)

    declaration_specifiers   go to state 42
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 26

   86 declaration_specifiers: function_specifier •
   90                       | function_specifier • declaration_specifiers

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 11
    SHORT      shift, and go to state 12
    SIGNED     shift, and go to state 13
    STATIC     shift, and go to state 14
    UNSIGNED   shift, and go to state 15
    VOID       shift, and go to state 16
    VOLATILE   shift, and go to state 17
    BOOL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    IMAGINARY  shift, and go to state 20

    $default  reduce using rule 86 (declaration_specifiers)

    declaration_specifiers   go to state 43
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 27

    0 $accept: start_symbol • $end

    $end  shift, and go to state 44


State 28

  207 start_symbol: translation_unit •
  209 translation_unit: translation_unit • external_declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 11
    SHORT      shift, and go to state 12
    SIGNED     shift, and go to state 13
    STATIC     shift, and go to state 14
    UNSIGNED   shift, and go to state 15
    VOID       shift, and go to state 16
    VOLATILE   shift, and go to state 17
    BOOL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    IMAGINARY  shift, and go to state 20

    $default  reduce using rule 207 (start_symbol)

    declaration              go to state 21
    declaration_specifiers   go to state 22
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    external_declaration     go to state 45
    function_definition      go to state 30


State 29

  208 translation_unit: external_declaration •

    $default  reduce using rule 208 (translation_unit)


State 30

  210 external_declaration: function_definition •

    $default  reduce using rule 210 (external_declaration)


State 31

  124 direct_declarator: ROUND_BRACKET_OPEN • declarator ROUND_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 31
    MUL                 shift, and go to state 32
    IDENTIFIER          shift, and go to state 33

    declarator         go to state 46
    direct_declarator  go to state 38
    pointer            go to state 39


State 32

  139 pointer: MUL • type_qualifier_list_opt
  140        | MUL • type_qualifier_list_opt pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 17

    $default  reduce using rule 135 (type_qualifier_list_opt)

    type_qualifier           go to state 47
    type_qualifier_list_opt  go to state 48
    type_qualifier_list      go to state 49


State 33

  123 direct_declarator: IDENTIFIER •

    $default  reduce using rule 123 (direct_declarator)


State 34

   82 declaration: declaration_specifiers init_declarator_list_opt • SEMICOLON

    SEMICOLON  shift, and go to state 50


State 35

   92 init_declarator_list_opt: init_declarator_list •
   94 init_declarator_list: init_declarator_list • COMMA init_declarator

    COMMA  shift, and go to state 51

    $default  reduce using rule 92 (init_declarator_list_opt)


State 36

   93 init_declarator_list: init_declarator •

    $default  reduce using rule 93 (init_declarator_list)


State 37

   95 init_declarator: declarator •
   96                | declarator • ASSIGN initializer
  212 function_definition: declaration_specifiers declarator • declaration_list_opt CURLY_BRACKET_OPEN switch_table block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 11
    SHORT      shift, and go to state 12
    SIGNED     shift, and go to state 13
    STATIC     shift, and go to state 14
    UNSIGNED   shift, and go to state 15
    VOID       shift, and go to state 16
    VOLATILE   shift, and go to state 17
    BOOL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    IMAGINARY  shift, and go to state 20
    ASSIGN     shift, and go to state 52

    CURLY_BRACKET_OPEN  reduce using rule 213 (declaration_list_opt)
    $default            reduce using rule 95 (init_declarator)

    declaration              go to state 53
    declaration_specifiers   go to state 54
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    declaration_list_opt     go to state 55
    declaration_list         go to state 56


State 38

  122 declarator: direct_declarator •
  125 direct_declarator: direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression_opt SQUARE_BRACKET_CLOSE
  126                  | direct_declarator • SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  127                  | direct_declarator • SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  128                  | direct_declarator • SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  129                  | direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  130                  | direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  131                  | direct_declarator • ROUND_BRACKET_OPEN switch_table parameter_type_list ROUND_BRACKET_CLOSE
  132                  | direct_declarator • ROUND_BRACKET_OPEN switch_table ROUND_BRACKET_CLOSE
  133                  | direct_declarator • ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 57
    ROUND_BRACKET_OPEN   shift, and go to state 58

    $default  reduce using rule 122 (declarator)


State 39

  121 declarator: pointer • direct_declarator

    ROUND_BRACKET_OPEN  shift, and go to state 31
    IDENTIFIER          shift, and go to state 33

    direct_declarator  go to state 59


State 40

   87 declaration_specifiers: storage_class_specifier declaration_specifiers •

    $default  reduce using rule 87 (declaration_specifiers)


State 41

   88 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 88 (declaration_specifiers)


State 42

   89 declaration_specifiers: type_qualifier declaration_specifiers •

    $default  reduce using rule 89 (declaration_specifiers)


State 43

   90 declaration_specifiers: function_specifier declaration_specifiers •

    $default  reduce using rule 90 (declaration_specifiers)


State 44

    0 $accept: start_symbol $end •

    $default  accept


State 45

  209 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 209 (translation_unit)


State 46

  124 direct_declarator: ROUND_BRACKET_OPEN declarator • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 60


State 47

  141 type_qualifier_list: type_qualifier •

    $default  reduce using rule 141 (type_qualifier_list)


State 48

  139 pointer: MUL type_qualifier_list_opt •
  140        | MUL type_qualifier_list_opt • pointer

    MUL  shift, and go to state 32

    $default  reduce using rule 139 (pointer)

    pointer  go to state 61


State 49

  136 type_qualifier_list_opt: type_qualifier_list •
  142 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 17

    $default  reduce using rule 136 (type_qualifier_list_opt)

    type_qualifier  go to state 62


State 50

   82 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON •

    $default  reduce using rule 82 (declaration)


State 51

   94 init_declarator_list: init_declarator_list COMMA • init_declarator

    ROUND_BRACKET_OPEN  shift, and go to state 31
    MUL                 shift, and go to state 32
    IDENTIFIER          shift, and go to state 33

    init_declarator    go to state 63
    declarator         go to state 64
    direct_declarator  go to state 38
    pointer            go to state 39


State 52

   96 init_declarator: declarator ASSIGN • initializer

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 67
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 98
    initializer                go to state 99


State 53

  215 declaration_list: declaration •

    $default  reduce using rule 215 (declaration_list)


State 54

   82 declaration: declaration_specifiers • init_declarator_list_opt SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 31
    MUL                 shift, and go to state 32
    IDENTIFIER          shift, and go to state 33

    $default  reduce using rule 91 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 34
    init_declarator_list      go to state 35
    init_declarator           go to state 36
    declarator                go to state 64
    direct_declarator         go to state 38
    pointer                   go to state 39


State 55

  212 function_definition: declaration_specifiers declarator declaration_list_opt • CURLY_BRACKET_OPEN switch_table block_item_list_opt CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 100


State 56

  214 declaration_list_opt: declaration_list •
  216 declaration_list: declaration_list • declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 11
    SHORT      shift, and go to state 12
    SIGNED     shift, and go to state 13
    STATIC     shift, and go to state 14
    UNSIGNED   shift, and go to state 15
    VOID       shift, and go to state 16
    VOLATILE   shift, and go to state 17
    BOOL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    IMAGINARY  shift, and go to state 20

    $default  reduce using rule 214 (declaration_list_opt)

    declaration              go to state 101
    declaration_specifiers   go to state 54
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 57

  125 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN • type_qualifier_list assignment_expression_opt SQUARE_BRACKET_CLOSE
  126                  | direct_declarator SQUARE_BRACKET_OPEN • assignment_expression SQUARE_BRACKET_CLOSE
  127                  | direct_declarator SQUARE_BRACKET_OPEN • SQUARE_BRACKET_CLOSE
  128                  | direct_declarator SQUARE_BRACKET_OPEN • STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  129                  | direct_declarator SQUARE_BRACKET_OPEN • type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  130                  | direct_declarator SQUARE_BRACKET_OPEN • type_qualifier_list MUL SQUARE_BRACKET_CLOSE

    CONST                 shift, and go to state 3
    RESTRICT              shift, and go to state 11
    SIZEOF                shift, and go to state 65
    STATIC                shift, and go to state 102
    VOLATILE              shift, and go to state 17
    SQUARE_BRACKET_CLOSE  shift, and go to state 103
    ROUND_BRACKET_OPEN    shift, and go to state 66
    INCREMENT             shift, and go to state 68
    DECREMENT             shift, and go to state 69
    BITWISE_AND           shift, and go to state 70
    MUL                   shift, and go to state 71
    PLUS                  shift, and go to state 72
    MINUS                 shift, and go to state 73
    BITWISE_NOT           shift, and go to state 74
    NOT                   shift, and go to state 75
    IDENTIFIER            shift, and go to state 76
    INTEGER               shift, and go to state 77
    FLOATING_CONSTANT     shift, and go to state 78
    CHARACTER_CONSTANT    shift, and go to state 79
    STRING_LITERAL        shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 104
    type_qualifier             go to state 47
    type_qualifier_list        go to state 105


State 58

  131 direct_declarator: direct_declarator ROUND_BRACKET_OPEN • switch_table parameter_type_list ROUND_BRACKET_CLOSE
  132                  | direct_declarator ROUND_BRACKET_OPEN • switch_table ROUND_BRACKET_CLOSE
  133                  | direct_declarator ROUND_BRACKET_OPEN • identifier_list ROUND_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 106

    $default  reduce using rule 134 (switch_table)

    switch_table     go to state 107
    identifier_list  go to state 108


State 59

  121 declarator: pointer direct_declarator •
  125 direct_declarator: direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression_opt SQUARE_BRACKET_CLOSE
  126                  | direct_declarator • SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  127                  | direct_declarator • SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  128                  | direct_declarator • SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  129                  | direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  130                  | direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  131                  | direct_declarator • ROUND_BRACKET_OPEN switch_table parameter_type_list ROUND_BRACKET_CLOSE
  132                  | direct_declarator • ROUND_BRACKET_OPEN switch_table ROUND_BRACKET_CLOSE
  133                  | direct_declarator • ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 57
    ROUND_BRACKET_OPEN   shift, and go to state 58

    $default  reduce using rule 121 (declarator)


State 60

  124 direct_declarator: ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE •

    $default  reduce using rule 124 (direct_declarator)


State 61

  140 pointer: MUL type_qualifier_list_opt pointer •

    $default  reduce using rule 140 (pointer)


State 62

  142 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 142 (type_qualifier_list)


State 63

   94 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 94 (init_declarator_list)


State 64

   95 init_declarator: declarator •
   96                | declarator • ASSIGN initializer

    ASSIGN  shift, and go to state 52

    $default  reduce using rule 95 (init_declarator)


State 65

   25 unary_expression: SIZEOF • unary_expression
   26                 | SIZEOF • ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 109
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant            go to state 81
    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 110
    unary_operator      go to state 85


State 66

    7 primary_expression: ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE
   15 postfix_expression: ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   34 cast_expression: ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE cast_expression

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 11
    SHORT               shift, and go to state 12
    SIGNED              shift, and go to state 13
    SIZEOF              shift, and go to state 65
    UNSIGNED            shift, and go to state 15
    VOID                shift, and go to state 16
    VOLATILE            shift, and go to state 17
    BOOL                shift, and go to state 18
    COMPLEX             shift, and go to state 19
    IMAGINARY           shift, and go to state 20
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 112
    type_specifier             go to state 113
    specifier_qualifier_list   go to state 114
    type_qualifier             go to state 115
    type_name                  go to state 116


State 67

  153 initializer: CURLY_BRACKET_OPEN • initializer_list CURLY_BRACKET_CLOSE
  154            | CURLY_BRACKET_OPEN • initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 117
    DOT                  shift, and go to state 118

    $default  reduce using rule 158 (designation_opt)

    initializer_list  go to state 119
    designation_opt   go to state 120
    designation       go to state 121
    designator_list   go to state 122
    designator        go to state 123


State 68

   22 unary_expression: INCREMENT • unary_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 124
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant            go to state 81
    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 125
    unary_operator      go to state 85


State 69

   23 unary_expression: DECREMENT • unary_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 124
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant            go to state 81
    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 126
    unary_operator      go to state 85


State 70

   27 unary_operator: BITWISE_AND •

    $default  reduce using rule 27 (unary_operator)


State 71

   28 unary_operator: MUL •

    $default  reduce using rule 28 (unary_operator)


State 72

   29 unary_operator: PLUS •

    $default  reduce using rule 29 (unary_operator)


State 73

   30 unary_operator: MINUS •

    $default  reduce using rule 30 (unary_operator)


State 74

   31 unary_operator: BITWISE_NOT •

    $default  reduce using rule 31 (unary_operator)


State 75

   32 unary_operator: NOT •

    $default  reduce using rule 32 (unary_operator)


State 76

    4 primary_expression: IDENTIFIER •

    $default  reduce using rule 4 (primary_expression)


State 77

    1 constant: INTEGER •

    $default  reduce using rule 1 (constant)


State 78

    2 constant: FLOATING_CONSTANT •

    $default  reduce using rule 2 (constant)


State 79

    3 constant: CHARACTER_CONSTANT •

    $default  reduce using rule 3 (constant)


State 80

    6 primary_expression: STRING_LITERAL •

    $default  reduce using rule 6 (primary_expression)


State 81

    5 primary_expression: constant •

    $default  reduce using rule 5 (primary_expression)


State 82

    8 postfix_expression: primary_expression •

    $default  reduce using rule 8 (postfix_expression)


State 83

    9 postfix_expression: postfix_expression • SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   10                   | postfix_expression • ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
   11                   | postfix_expression • DOT IDENTIFIER
   12                   | postfix_expression • IMPLIES IDENTIFIER
   13                   | postfix_expression • INCREMENT
   14                   | postfix_expression • DECREMENT
   21 unary_expression: postfix_expression •

    SQUARE_BRACKET_OPEN  shift, and go to state 127
    ROUND_BRACKET_OPEN   shift, and go to state 128
    DOT                  shift, and go to state 129
    IMPLIES              shift, and go to state 130
    INCREMENT            shift, and go to state 131
    DECREMENT            shift, and go to state 132

    $default  reduce using rule 21 (unary_expression)


State 84

   33 cast_expression: unary_expression •
   68 assignment_expression: unary_expression • ASSIGN assignment_expression
   69                      | unary_expression • MUL_EQUAL assignment_expression
   70                      | unary_expression • DIV_EQUAL assignment_expression
   71                      | unary_expression • MOD_EQUAL assignment_expression
   72                      | unary_expression • PLUS_EQUAL assignment_expression
   73                      | unary_expression • MINUS_EQUAL assignment_expression
   74                      | unary_expression • SHIFT_LEFT_EQUAL assignment_expression
   75                      | unary_expression • SHIFT_RIGHT_EQUAL assignment_expression
   76                      | unary_expression • BITWISE_AND_EQUAL assignment_expression
   77                      | unary_expression • BITWISE_XOR_EQUAL assignment_expression
   78                      | unary_expression • BITWISE_OR_EQUAL assignment_expression

    ASSIGN             shift, and go to state 133
    MUL_EQUAL          shift, and go to state 134
    DIV_EQUAL          shift, and go to state 135
    MOD_EQUAL          shift, and go to state 136
    PLUS_EQUAL         shift, and go to state 137
    MINUS_EQUAL        shift, and go to state 138
    SHIFT_LEFT_EQUAL   shift, and go to state 139
    SHIFT_RIGHT_EQUAL  shift, and go to state 140
    BITWISE_AND_EQUAL  shift, and go to state 141
    BITWISE_XOR_EQUAL  shift, and go to state 142
    BITWISE_OR_EQUAL   shift, and go to state 143

    $default  reduce using rule 33 (cast_expression)


State 85

   24 unary_expression: unary_operator • cast_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant            go to state 81
    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 144
    unary_operator      go to state 85
    cast_expression     go to state 145


State 86

   35 multiplicative_expression: cast_expression •

    $default  reduce using rule 35 (multiplicative_expression)


State 87

   36 multiplicative_expression: multiplicative_expression • MUL cast_expression
   37                          | multiplicative_expression • DIV cast_expression
   38                          | multiplicative_expression • MOD cast_expression
   39 additive_expression: multiplicative_expression •

    MUL  shift, and go to state 146
    DIV  shift, and go to state 147
    MOD  shift, and go to state 148

    $default  reduce using rule 39 (additive_expression)


State 88

   40 additive_expression: additive_expression • PLUS multiplicative_expression
   41                    | additive_expression • MINUS multiplicative_expression
   42 shift_expression: additive_expression •

    PLUS   shift, and go to state 149
    MINUS  shift, and go to state 150

    $default  reduce using rule 42 (shift_expression)


State 89

   43 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   44                 | shift_expression • RIGHT_SHIFT additive_expression
   45 relational_expression: shift_expression •

    LEFT_SHIFT   shift, and go to state 151
    RIGHT_SHIFT  shift, and go to state 152

    $default  reduce using rule 45 (relational_expression)


State 90

   46 relational_expression: relational_expression • LESS_THAN shift_expression
   47                      | relational_expression • GREATER_THAN shift_expression
   48                      | relational_expression • LESS_EQUAL shift_expression
   49                      | relational_expression • GREATER_EQUAL shift_expression
   50 equality_expression: relational_expression •

    LESS_THAN      shift, and go to state 153
    GREATER_THAN   shift, and go to state 154
    LESS_EQUAL     shift, and go to state 155
    GREATER_EQUAL  shift, and go to state 156

    $default  reduce using rule 50 (equality_expression)


State 91

   51 equality_expression: equality_expression • EQUAL relational_expression
   52                    | equality_expression • NOT_EQUAL relational_expression
   53 and_expression: equality_expression •

    EQUAL      shift, and go to state 157
    NOT_EQUAL  shift, and go to state 158

    $default  reduce using rule 53 (and_expression)


State 92

   54 and_expression: and_expression • BITWISE_AND equality_expression
   55 exclusive_or_expression: and_expression •

    BITWISE_AND  shift, and go to state 159

    $default  reduce using rule 55 (exclusive_or_expression)


State 93

   56 exclusive_or_expression: exclusive_or_expression • BITWISE_XOR and_expression
   57 inclusive_or_expression: exclusive_or_expression •

    BITWISE_XOR  shift, and go to state 160

    $default  reduce using rule 57 (inclusive_or_expression)


State 94

   58 inclusive_or_expression: inclusive_or_expression • BITWISE_OR exclusive_or_expression
   59 logical_and_expression: inclusive_or_expression •

    BITWISE_OR  shift, and go to state 161

    $default  reduce using rule 59 (logical_and_expression)


State 95

   60 logical_and_expression: logical_and_expression • AND inclusive_or_expression
   61 logical_or_expression: logical_and_expression •

    AND  shift, and go to state 162

    $default  reduce using rule 61 (logical_or_expression)


State 96

   62 logical_or_expression: logical_or_expression • OR logical_and_expression
   63 conditional_expression: logical_or_expression •
   64                       | logical_or_expression • newstatement QUESTION countinst expression newstatement COLON countinst conditional_expression

    OR  shift, and go to state 163

    QUESTION  reduce using rule 66 (newstatement)
    $default  reduce using rule 63 (conditional_expression)

    newstatement  go to state 164


State 97

   67 assignment_expression: conditional_expression •

    $default  reduce using rule 67 (assignment_expression)


State 98

  152 initializer: assignment_expression •

    $default  reduce using rule 152 (initializer)


State 99

   96 init_declarator: declarator ASSIGN initializer •

    $default  reduce using rule 96 (init_declarator)


State 100

  212 function_definition: declaration_specifiers declarator declaration_list_opt CURLY_BRACKET_OPEN • switch_table block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 134 (switch_table)

    switch_table  go to state 165


State 101

  216 declaration_list: declaration_list declaration •

    $default  reduce using rule 216 (declaration_list)


State 102

  128 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC • type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 17

    $default  reduce using rule 135 (type_qualifier_list_opt)

    type_qualifier           go to state 47
    type_qualifier_list_opt  go to state 166
    type_qualifier_list      go to state 49


State 103

  127 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 127 (direct_declarator)


State 104

  126 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN assignment_expression • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 167


State 105

  125 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list • assignment_expression_opt SQUARE_BRACKET_CLOSE
  129                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list • STATIC assignment_expression SQUARE_BRACKET_CLOSE
  130                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list • MUL SQUARE_BRACKET_CLOSE
  142 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST               shift, and go to state 3
    RESTRICT            shift, and go to state 11
    SIZEOF              shift, and go to state 65
    STATIC              shift, and go to state 168
    VOLATILE            shift, and go to state 17
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 169
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 137 (assignment_expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 170
    type_qualifier             go to state 62
    assignment_expression_opt  go to state 171


State 106

  149 identifier_list: IDENTIFIER •

    $default  reduce using rule 149 (identifier_list)


State 107

  131 direct_declarator: direct_declarator ROUND_BRACKET_OPEN switch_table • parameter_type_list ROUND_BRACKET_CLOSE
  132                  | direct_declarator ROUND_BRACKET_OPEN switch_table • ROUND_BRACKET_CLOSE

    AUTO                 shift, and go to state 1
    CHAR                 shift, and go to state 2
    CONST                shift, and go to state 3
    DOUBLE               shift, and go to state 4
    EXTERN               shift, and go to state 5
    REGISTER             shift, and go to state 6
    FLOAT                shift, and go to state 7
    INLINE               shift, and go to state 8
    INT                  shift, and go to state 9
    LONG                 shift, and go to state 10
    RESTRICT             shift, and go to state 11
    SHORT                shift, and go to state 12
    SIGNED               shift, and go to state 13
    STATIC               shift, and go to state 14
    UNSIGNED             shift, and go to state 15
    VOID                 shift, and go to state 16
    VOLATILE             shift, and go to state 17
    BOOL                 shift, and go to state 18
    COMPLEX              shift, and go to state 19
    IMAGINARY            shift, and go to state 20
    ROUND_BRACKET_CLOSE  shift, and go to state 172

    declaration_specifiers   go to state 173
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    parameter_type_list      go to state 174
    parameter_list           go to state 175
    parameter_declaration    go to state 176


State 108

  133 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list • ROUND_BRACKET_CLOSE
  150 identifier_list: identifier_list • COMMA IDENTIFIER

    ROUND_BRACKET_CLOSE  shift, and go to state 177
    COMMA                shift, and go to state 178


State 109

    7 primary_expression: ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE
   15 postfix_expression: ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   26 unary_expression: SIZEOF ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 11
    SHORT               shift, and go to state 12
    SIGNED              shift, and go to state 13
    SIZEOF              shift, and go to state 65
    UNSIGNED            shift, and go to state 15
    VOID                shift, and go to state 16
    VOLATILE            shift, and go to state 17
    BOOL                shift, and go to state 18
    COMPLEX             shift, and go to state 19
    IMAGINARY           shift, and go to state 20
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 112
    type_specifier             go to state 113
    specifier_qualifier_list   go to state 114
    type_qualifier             go to state 115
    type_name                  go to state 179


State 110

   25 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 25 (unary_expression)


State 111

   79 expression: assignment_expression •

    $default  reduce using rule 79 (expression)


State 112

    7 primary_expression: ROUND_BRACKET_OPEN expression • ROUND_BRACKET_CLOSE
   80 expression: expression • COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 180
    COMMA                shift, and go to state 181


State 113

  113 specifier_qualifier_list: type_specifier • specifier_qualifier_list
  115                         | type_specifier •

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 11
    SHORT      shift, and go to state 12
    SIGNED     shift, and go to state 13
    UNSIGNED   shift, and go to state 15
    VOID       shift, and go to state 16
    VOLATILE   shift, and go to state 17
    BOOL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    IMAGINARY  shift, and go to state 20

    $default  reduce using rule 115 (specifier_qualifier_list)

    type_specifier            go to state 113
    specifier_qualifier_list  go to state 182
    type_qualifier            go to state 115


State 114

  151 type_name: specifier_qualifier_list •

    $default  reduce using rule 151 (type_name)


State 115

  114 specifier_qualifier_list: type_qualifier • specifier_qualifier_list
  116                         | type_qualifier •

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 11
    SHORT      shift, and go to state 12
    SIGNED     shift, and go to state 13
    UNSIGNED   shift, and go to state 15
    VOID       shift, and go to state 16
    VOLATILE   shift, and go to state 17
    BOOL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    IMAGINARY  shift, and go to state 20

    $default  reduce using rule 116 (specifier_qualifier_list)

    type_specifier            go to state 113
    specifier_qualifier_list  go to state 183
    type_qualifier            go to state 115


State 116

   15 postfix_expression: ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   34 cast_expression: ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE cast_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 184


State 117

  162 designator: SQUARE_BRACKET_OPEN • constant_expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 185
    constant_expression        go to state 186


State 118

  163 designator: DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 187


State 119

  153 initializer: CURLY_BRACKET_OPEN initializer_list • CURLY_BRACKET_CLOSE
  154            | CURLY_BRACKET_OPEN initializer_list • COMMA CURLY_BRACKET_CLOSE
  156 initializer_list: initializer_list • COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 188
    COMMA                shift, and go to state 189


State 120

  155 initializer_list: designation_opt • initializer

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 67
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 98
    initializer                go to state 190


State 121

  157 designation_opt: designation •

    $default  reduce using rule 157 (designation_opt)


State 122

  159 designation: designator_list • ASSIGN
  161 designator_list: designator_list • designator

    SQUARE_BRACKET_OPEN  shift, and go to state 117
    DOT                  shift, and go to state 118
    ASSIGN               shift, and go to state 191

    designator  go to state 192


State 123

  160 designator_list: designator •

    $default  reduce using rule 160 (designator_list)


State 124

    7 primary_expression: ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE
   15 postfix_expression: ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 11
    SHORT               shift, and go to state 12
    SIGNED              shift, and go to state 13
    SIZEOF              shift, and go to state 65
    UNSIGNED            shift, and go to state 15
    VOID                shift, and go to state 16
    VOLATILE            shift, and go to state 17
    BOOL                shift, and go to state 18
    COMPLEX             shift, and go to state 19
    IMAGINARY           shift, and go to state 20
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 112
    type_specifier             go to state 113
    specifier_qualifier_list   go to state 114
    type_qualifier             go to state 115
    type_name                  go to state 193


State 125

   22 unary_expression: INCREMENT unary_expression •

    $default  reduce using rule 22 (unary_expression)


State 126

   23 unary_expression: DECREMENT unary_expression •

    $default  reduce using rule 23 (unary_expression)


State 127

    9 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN • expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 194


State 128

   10 postfix_expression: postfix_expression ROUND_BRACKET_OPEN • argument_expression_list_opt ROUND_BRACKET_CLOSE

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 17 (argument_expression_list_opt)

    constant                      go to state 81
    primary_expression            go to state 82
    postfix_expression            go to state 83
    argument_expression_list_opt  go to state 195
    argument_expression_list      go to state 196
    unary_expression              go to state 84
    unary_operator                go to state 85
    cast_expression               go to state 86
    multiplicative_expression     go to state 87
    additive_expression           go to state 88
    shift_expression              go to state 89
    relational_expression         go to state 90
    equality_expression           go to state 91
    and_expression                go to state 92
    exclusive_or_expression       go to state 93
    inclusive_or_expression       go to state 94
    logical_and_expression        go to state 95
    logical_or_expression         go to state 96
    conditional_expression        go to state 97
    assignment_expression         go to state 197


State 129

   11 postfix_expression: postfix_expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 198


State 130

   12 postfix_expression: postfix_expression IMPLIES • IDENTIFIER

    IDENTIFIER  shift, and go to state 199


State 131

   13 postfix_expression: postfix_expression INCREMENT •

    $default  reduce using rule 13 (postfix_expression)


State 132

   14 postfix_expression: postfix_expression DECREMENT •

    $default  reduce using rule 14 (postfix_expression)


State 133

   68 assignment_expression: unary_expression ASSIGN • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 200


State 134

   69 assignment_expression: unary_expression MUL_EQUAL • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 201


State 135

   70 assignment_expression: unary_expression DIV_EQUAL • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 202


State 136

   71 assignment_expression: unary_expression MOD_EQUAL • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 203


State 137

   72 assignment_expression: unary_expression PLUS_EQUAL • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 204


State 138

   73 assignment_expression: unary_expression MINUS_EQUAL • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 205


State 139

   74 assignment_expression: unary_expression SHIFT_LEFT_EQUAL • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 206


State 140

   75 assignment_expression: unary_expression SHIFT_RIGHT_EQUAL • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 207


State 141

   76 assignment_expression: unary_expression BITWISE_AND_EQUAL • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 208


State 142

   77 assignment_expression: unary_expression BITWISE_XOR_EQUAL • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 209


State 143

   78 assignment_expression: unary_expression BITWISE_OR_EQUAL • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 210


State 144

   33 cast_expression: unary_expression •

    $default  reduce using rule 33 (cast_expression)


State 145

   24 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 24 (unary_expression)


State 146

   36 multiplicative_expression: multiplicative_expression MUL • cast_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant            go to state 81
    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 144
    unary_operator      go to state 85
    cast_expression     go to state 211


State 147

   37 multiplicative_expression: multiplicative_expression DIV • cast_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant            go to state 81
    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 144
    unary_operator      go to state 85
    cast_expression     go to state 212


State 148

   38 multiplicative_expression: multiplicative_expression MOD • cast_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant            go to state 81
    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 144
    unary_operator      go to state 85
    cast_expression     go to state 213


State 149

   40 additive_expression: additive_expression PLUS • multiplicative_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 214


State 150

   41 additive_expression: additive_expression MINUS • multiplicative_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 215


State 151

   43 shift_expression: shift_expression LEFT_SHIFT • additive_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 216


State 152

   44 shift_expression: shift_expression RIGHT_SHIFT • additive_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 217


State 153

   46 relational_expression: relational_expression LESS_THAN • shift_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 218


State 154

   47 relational_expression: relational_expression GREATER_THAN • shift_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 219


State 155

   48 relational_expression: relational_expression LESS_EQUAL • shift_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 220


State 156

   49 relational_expression: relational_expression GREATER_EQUAL • shift_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 221


State 157

   51 equality_expression: equality_expression EQUAL • relational_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 222


State 158

   52 equality_expression: equality_expression NOT_EQUAL • relational_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 223


State 159

   54 and_expression: and_expression BITWISE_AND • equality_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 224


State 160

   56 exclusive_or_expression: exclusive_or_expression BITWISE_XOR • and_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 225


State 161

   58 inclusive_or_expression: inclusive_or_expression BITWISE_OR • exclusive_or_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 226


State 162

   60 logical_and_expression: logical_and_expression AND • inclusive_or_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 227


State 163

   62 logical_or_expression: logical_or_expression OR • logical_and_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 228


State 164

   64 conditional_expression: logical_or_expression newstatement • QUESTION countinst expression newstatement COLON countinst conditional_expression

    QUESTION  shift, and go to state 229


State 165

  212 function_definition: declaration_specifiers declarator declaration_list_opt CURLY_BRACKET_OPEN switch_table • block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    DOUBLE              shift, and go to state 4
    EXTERN              shift, and go to state 5
    REGISTER            shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 11
    RETURN              shift, and go to state 238
    SHORT               shift, and go to state 12
    SIGNED              shift, and go to state 13
    SIZEOF              shift, and go to state 65
    STATIC              shift, and go to state 14
    SWITCH              shift, and go to state 239
    UNSIGNED            shift, and go to state 15
    VOID                shift, and go to state 16
    VOLATILE            shift, and go to state 17
    WHILE               shift, and go to state 240
    BOOL                shift, and go to state 18
    COMPLEX             shift, and go to state 19
    IMAGINARY           shift, and go to state 20
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    SEMICOLON  reduce using rule 187 (expression_opt)
    $default   reduce using rule 180 (block_item_list_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    declaration                go to state 244
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 245
    labeled_statement          go to state 246
    compound_statement         go to state 247
    block_item_list_opt        go to state 248
    block_item_list            go to state 249
    block_item                 go to state 250
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 166

  128 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt • assignment_expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 256


State 167

  126 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 126 (direct_declarator)


State 168

  129 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC • assignment_expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 257


State 169

   28 unary_operator: MUL •
  130 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 258

    $default  reduce using rule 28 (unary_operator)


State 170

  138 assignment_expression_opt: assignment_expression •

    $default  reduce using rule 138 (assignment_expression_opt)


State 171

  125 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression_opt • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 259


State 172

  132 direct_declarator: direct_declarator ROUND_BRACKET_OPEN switch_table ROUND_BRACKET_CLOSE •

    $default  reduce using rule 132 (direct_declarator)


State 173

  147 parameter_declaration: declaration_specifiers • declarator
  148                      | declaration_specifiers •

    ROUND_BRACKET_OPEN  shift, and go to state 31
    MUL                 shift, and go to state 32
    IDENTIFIER          shift, and go to state 33

    $default  reduce using rule 148 (parameter_declaration)

    declarator         go to state 260
    direct_declarator  go to state 38
    pointer            go to state 39


State 174

  131 direct_declarator: direct_declarator ROUND_BRACKET_OPEN switch_table parameter_type_list • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 261


State 175

  143 parameter_type_list: parameter_list •
  144                    | parameter_list • COMMA ELLIPSIS
  146 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 262

    $default  reduce using rule 143 (parameter_type_list)


State 176

  145 parameter_list: parameter_declaration •

    $default  reduce using rule 145 (parameter_list)


State 177

  133 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE •

    $default  reduce using rule 133 (direct_declarator)


State 178

  150 identifier_list: identifier_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 263


State 179

   15 postfix_expression: ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   26 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 264


State 180

    7 primary_expression: ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE •

    $default  reduce using rule 7 (primary_expression)


State 181

   80 expression: expression COMMA • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 265


State 182

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list •

    $default  reduce using rule 113 (specifier_qualifier_list)


State 183

  114 specifier_qualifier_list: type_qualifier specifier_qualifier_list •

    $default  reduce using rule 114 (specifier_qualifier_list)


State 184

   15 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   34 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • cast_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 266
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant            go to state 81
    primary_expression  go to state 82
    postfix_expression  go to state 83
    unary_expression    go to state 144
    unary_operator      go to state 85
    cast_expression     go to state 267


State 185

   81 constant_expression: conditional_expression •

    $default  reduce using rule 81 (constant_expression)


State 186

  162 designator: SQUARE_BRACKET_OPEN constant_expression • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 268


State 187

  163 designator: DOT IDENTIFIER •

    $default  reduce using rule 163 (designator)


State 188

  153 initializer: CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE •

    $default  reduce using rule 153 (initializer)


State 189

  154 initializer: CURLY_BRACKET_OPEN initializer_list COMMA • CURLY_BRACKET_CLOSE
  156 initializer_list: initializer_list COMMA • designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 117
    CURLY_BRACKET_CLOSE  shift, and go to state 269
    DOT                  shift, and go to state 118

    $default  reduce using rule 158 (designation_opt)

    designation_opt  go to state 270
    designation      go to state 121
    designator_list  go to state 122
    designator       go to state 123


State 190

  155 initializer_list: designation_opt initializer •

    $default  reduce using rule 155 (initializer_list)


State 191

  159 designation: designator_list ASSIGN •

    $default  reduce using rule 159 (designation)


State 192

  161 designator_list: designator_list designator •

    $default  reduce using rule 161 (designator_list)


State 193

   15 postfix_expression: ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 271


State 194

    9 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression • SQUARE_BRACKET_CLOSE
   80 expression: expression • COMMA assignment_expression

    SQUARE_BRACKET_CLOSE  shift, and go to state 272
    COMMA                 shift, and go to state 181


State 195

   10 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 273


State 196

   18 argument_expression_list_opt: argument_expression_list •
   20 argument_expression_list: argument_expression_list • COMMA assignment_expression

    COMMA  shift, and go to state 274

    $default  reduce using rule 18 (argument_expression_list_opt)


State 197

   19 argument_expression_list: assignment_expression •

    $default  reduce using rule 19 (argument_expression_list)


State 198

   11 postfix_expression: postfix_expression DOT IDENTIFIER •

    $default  reduce using rule 11 (postfix_expression)


State 199

   12 postfix_expression: postfix_expression IMPLIES IDENTIFIER •

    $default  reduce using rule 12 (postfix_expression)


State 200

   68 assignment_expression: unary_expression ASSIGN assignment_expression •

    $default  reduce using rule 68 (assignment_expression)


State 201

   69 assignment_expression: unary_expression MUL_EQUAL assignment_expression •

    $default  reduce using rule 69 (assignment_expression)


State 202

   70 assignment_expression: unary_expression DIV_EQUAL assignment_expression •

    $default  reduce using rule 70 (assignment_expression)


State 203

   71 assignment_expression: unary_expression MOD_EQUAL assignment_expression •

    $default  reduce using rule 71 (assignment_expression)


State 204

   72 assignment_expression: unary_expression PLUS_EQUAL assignment_expression •

    $default  reduce using rule 72 (assignment_expression)


State 205

   73 assignment_expression: unary_expression MINUS_EQUAL assignment_expression •

    $default  reduce using rule 73 (assignment_expression)


State 206

   74 assignment_expression: unary_expression SHIFT_LEFT_EQUAL assignment_expression •

    $default  reduce using rule 74 (assignment_expression)


State 207

   75 assignment_expression: unary_expression SHIFT_RIGHT_EQUAL assignment_expression •

    $default  reduce using rule 75 (assignment_expression)


State 208

   76 assignment_expression: unary_expression BITWISE_AND_EQUAL assignment_expression •

    $default  reduce using rule 76 (assignment_expression)


State 209

   77 assignment_expression: unary_expression BITWISE_XOR_EQUAL assignment_expression •

    $default  reduce using rule 77 (assignment_expression)


State 210

   78 assignment_expression: unary_expression BITWISE_OR_EQUAL assignment_expression •

    $default  reduce using rule 78 (assignment_expression)


State 211

   36 multiplicative_expression: multiplicative_expression MUL cast_expression •

    $default  reduce using rule 36 (multiplicative_expression)


State 212

   37 multiplicative_expression: multiplicative_expression DIV cast_expression •

    $default  reduce using rule 37 (multiplicative_expression)


State 213

   38 multiplicative_expression: multiplicative_expression MOD cast_expression •

    $default  reduce using rule 38 (multiplicative_expression)


State 214

   36 multiplicative_expression: multiplicative_expression • MUL cast_expression
   37                          | multiplicative_expression • DIV cast_expression
   38                          | multiplicative_expression • MOD cast_expression
   40 additive_expression: additive_expression PLUS multiplicative_expression •

    MUL  shift, and go to state 146
    DIV  shift, and go to state 147
    MOD  shift, and go to state 148

    $default  reduce using rule 40 (additive_expression)


State 215

   36 multiplicative_expression: multiplicative_expression • MUL cast_expression
   37                          | multiplicative_expression • DIV cast_expression
   38                          | multiplicative_expression • MOD cast_expression
   41 additive_expression: additive_expression MINUS multiplicative_expression •

    MUL  shift, and go to state 146
    DIV  shift, and go to state 147
    MOD  shift, and go to state 148

    $default  reduce using rule 41 (additive_expression)


State 216

   40 additive_expression: additive_expression • PLUS multiplicative_expression
   41                    | additive_expression • MINUS multiplicative_expression
   43 shift_expression: shift_expression LEFT_SHIFT additive_expression •

    PLUS   shift, and go to state 149
    MINUS  shift, and go to state 150

    $default  reduce using rule 43 (shift_expression)


State 217

   40 additive_expression: additive_expression • PLUS multiplicative_expression
   41                    | additive_expression • MINUS multiplicative_expression
   44 shift_expression: shift_expression RIGHT_SHIFT additive_expression •

    PLUS   shift, and go to state 149
    MINUS  shift, and go to state 150

    $default  reduce using rule 44 (shift_expression)


State 218

   43 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   44                 | shift_expression • RIGHT_SHIFT additive_expression
   46 relational_expression: relational_expression LESS_THAN shift_expression •

    LEFT_SHIFT   shift, and go to state 151
    RIGHT_SHIFT  shift, and go to state 152

    $default  reduce using rule 46 (relational_expression)


State 219

   43 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   44                 | shift_expression • RIGHT_SHIFT additive_expression
   47 relational_expression: relational_expression GREATER_THAN shift_expression •

    LEFT_SHIFT   shift, and go to state 151
    RIGHT_SHIFT  shift, and go to state 152

    $default  reduce using rule 47 (relational_expression)


State 220

   43 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   44                 | shift_expression • RIGHT_SHIFT additive_expression
   48 relational_expression: relational_expression LESS_EQUAL shift_expression •

    LEFT_SHIFT   shift, and go to state 151
    RIGHT_SHIFT  shift, and go to state 152

    $default  reduce using rule 48 (relational_expression)


State 221

   43 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   44                 | shift_expression • RIGHT_SHIFT additive_expression
   49 relational_expression: relational_expression GREATER_EQUAL shift_expression •

    LEFT_SHIFT   shift, and go to state 151
    RIGHT_SHIFT  shift, and go to state 152

    $default  reduce using rule 49 (relational_expression)


State 222

   46 relational_expression: relational_expression • LESS_THAN shift_expression
   47                      | relational_expression • GREATER_THAN shift_expression
   48                      | relational_expression • LESS_EQUAL shift_expression
   49                      | relational_expression • GREATER_EQUAL shift_expression
   51 equality_expression: equality_expression EQUAL relational_expression •

    LESS_THAN      shift, and go to state 153
    GREATER_THAN   shift, and go to state 154
    LESS_EQUAL     shift, and go to state 155
    GREATER_EQUAL  shift, and go to state 156

    $default  reduce using rule 51 (equality_expression)


State 223

   46 relational_expression: relational_expression • LESS_THAN shift_expression
   47                      | relational_expression • GREATER_THAN shift_expression
   48                      | relational_expression • LESS_EQUAL shift_expression
   49                      | relational_expression • GREATER_EQUAL shift_expression
   52 equality_expression: equality_expression NOT_EQUAL relational_expression •

    LESS_THAN      shift, and go to state 153
    GREATER_THAN   shift, and go to state 154
    LESS_EQUAL     shift, and go to state 155
    GREATER_EQUAL  shift, and go to state 156

    $default  reduce using rule 52 (equality_expression)


State 224

   51 equality_expression: equality_expression • EQUAL relational_expression
   52                    | equality_expression • NOT_EQUAL relational_expression
   54 and_expression: and_expression BITWISE_AND equality_expression •

    EQUAL      shift, and go to state 157
    NOT_EQUAL  shift, and go to state 158

    $default  reduce using rule 54 (and_expression)


State 225

   54 and_expression: and_expression • BITWISE_AND equality_expression
   56 exclusive_or_expression: exclusive_or_expression BITWISE_XOR and_expression •

    BITWISE_AND  shift, and go to state 159

    $default  reduce using rule 56 (exclusive_or_expression)


State 226

   56 exclusive_or_expression: exclusive_or_expression • BITWISE_XOR and_expression
   58 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression •

    BITWISE_XOR  shift, and go to state 160

    $default  reduce using rule 58 (inclusive_or_expression)


State 227

   58 inclusive_or_expression: inclusive_or_expression • BITWISE_OR exclusive_or_expression
   60 logical_and_expression: logical_and_expression AND inclusive_or_expression •

    BITWISE_OR  shift, and go to state 161

    $default  reduce using rule 60 (logical_and_expression)


State 228

   60 logical_and_expression: logical_and_expression • AND inclusive_or_expression
   62 logical_or_expression: logical_or_expression OR logical_and_expression •

    AND  shift, and go to state 162

    $default  reduce using rule 62 (logical_or_expression)


State 229

   64 conditional_expression: logical_or_expression newstatement QUESTION • countinst expression newstatement COLON countinst conditional_expression

    $default  reduce using rule 65 (countinst)

    countinst  go to state 275


State 230

  205 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 276


State 231

  176 labeled_statement: CASE • constant_expression COLON statement

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 185
    constant_expression        go to state 277


State 232

  204 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 278


State 233

  177 labeled_statement: DEFAULT • COLON statement

    COLON  shift, and go to state 279


State 234

  194 iteration_statement: DO • dostart countinst loop_block countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  195                    | DO • dostart countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 202 (dostart)

    dostart  go to state 280


State 235

  196 iteration_statement: FOR • forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR • forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  198                    | FOR • forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR • forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 200 (forstart)

    forstart  go to state 281


State 236

  203 jump_statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 282


State 237

  189 selection_statement: IF • ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst statement newstatement
  190                    | IF • ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst statement newstatement ELSE countinst statement

    ROUND_BRACKET_OPEN  shift, and go to state 283


State 238

  206 jump_statement: RETURN • expression_opt SEMICOLON

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    expression_opt             go to state 284


State 239

  191 selection_statement: SWITCH • ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 285


State 240

  192 iteration_statement: WHILE • whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst loop_block
  193                    | WHILE • whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 201 (whilestart)

    whilestart  go to state 286


State 241

  178 compound_statement: CURLY_BRACKET_OPEN • createST switch_table block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 179 (createST)

    createST  go to state 287


State 242

    4 primary_expression: IDENTIFIER •
  175 labeled_statement: IDENTIFIER • COLON statement

    COLON  shift, and go to state 288

    $default  reduce using rule 4 (primary_expression)


State 243

   80 expression: expression • COMMA assignment_expression
  188 expression_opt: expression •

    COMMA  shift, and go to state 181

    $default  reduce using rule 188 (expression_opt)


State 244

  184 block_item: declaration •

    $default  reduce using rule 184 (block_item)


State 245

  185 block_item: statement •

    $default  reduce using rule 185 (block_item)


State 246

  164 statement: labeled_statement •

    $default  reduce using rule 164 (statement)


State 247

  165 statement: compound_statement •

    $default  reduce using rule 165 (statement)


State 248

  212 function_definition: declaration_specifiers declarator declaration_list_opt CURLY_BRACKET_OPEN switch_table block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 289


State 249

  181 block_item_list_opt: block_item_list •
  183 block_item_list: block_item_list • countinst block_item

    CURLY_BRACKET_CLOSE  reduce using rule 181 (block_item_list_opt)
    $default             reduce using rule 65 (countinst)

    countinst  go to state 290


State 250

  182 block_item_list: block_item •

    $default  reduce using rule 182 (block_item_list)


State 251

  166 statement: expression_statement •

    $default  reduce using rule 166 (statement)


State 252

  186 expression_statement: expression_opt • SEMICOLON

    SEMICOLON  shift, and go to state 291


State 253

  167 statement: selection_statement •

    $default  reduce using rule 167 (statement)


State 254

  168 statement: iteration_statement •

    $default  reduce using rule 168 (statement)


State 255

  169 statement: jump_statement •

    $default  reduce using rule 169 (statement)


State 256

  128 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 292


State 257

  129 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 293


State 258

  130 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 130 (direct_declarator)


State 259

  125 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression_opt SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 125 (direct_declarator)


State 260

  147 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 147 (parameter_declaration)


State 261

  131 direct_declarator: direct_declarator ROUND_BRACKET_OPEN switch_table parameter_type_list ROUND_BRACKET_CLOSE •

    $default  reduce using rule 131 (direct_declarator)


State 262

  144 parameter_type_list: parameter_list COMMA • ELLIPSIS
  146 parameter_list: parameter_list COMMA • parameter_declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 11
    SHORT      shift, and go to state 12
    SIGNED     shift, and go to state 13
    STATIC     shift, and go to state 14
    UNSIGNED   shift, and go to state 15
    VOID       shift, and go to state 16
    VOLATILE   shift, and go to state 17
    BOOL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    IMAGINARY  shift, and go to state 20
    ELLIPSIS   shift, and go to state 294

    declaration_specifiers   go to state 173
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    parameter_declaration    go to state 295


State 263

  150 identifier_list: identifier_list COMMA IDENTIFIER •

    $default  reduce using rule 150 (identifier_list)


State 264

   15 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   26 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE •

    CURLY_BRACKET_OPEN  shift, and go to state 266

    $default  reduce using rule 26 (unary_expression)


State 265

   80 expression: expression COMMA assignment_expression •

    $default  reduce using rule 80 (expression)


State 266

   15 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN • initializer_list CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN • initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 117
    DOT                  shift, and go to state 118

    $default  reduce using rule 158 (designation_opt)

    initializer_list  go to state 296
    designation_opt   go to state 120
    designation       go to state 121
    designator_list   go to state 122
    designator        go to state 123


State 267

   34 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression •

    $default  reduce using rule 34 (cast_expression)


State 268

  162 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 162 (designator)


State 269

  154 initializer: CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE •

    $default  reduce using rule 154 (initializer)


State 270

  156 initializer_list: initializer_list COMMA designation_opt • initializer

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 67
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 98
    initializer                go to state 297


State 271

   15 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 266


State 272

    9 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 9 (postfix_expression)


State 273

   10 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE •

    $default  reduce using rule 10 (postfix_expression)


State 274

   20 argument_expression_list: argument_expression_list COMMA • assignment_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 298


State 275

   64 conditional_expression: logical_or_expression newstatement QUESTION countinst • expression newstatement COLON countinst conditional_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 299


State 276

  205 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 205 (jump_statement)


State 277

  176 labeled_statement: CASE constant_expression • COLON statement

    COLON  shift, and go to state 300


State 278

  204 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 204 (jump_statement)


State 279

  177 labeled_statement: DEFAULT COLON • statement

    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    RETURN              shift, and go to state 238
    SIZEOF              shift, and go to state 65
    SWITCH              shift, and go to state 239
    WHILE               shift, and go to state 240
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    statement                  go to state 301
    labeled_statement          go to state 246
    compound_statement         go to state 247
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 280

  194 iteration_statement: DO dostart • countinst loop_block countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  195                    | DO dostart • countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 65 (countinst)

    countinst  go to state 302


State 281

  196 iteration_statement: FOR forstart • ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart • ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  198                    | FOR forstart • ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart • ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 303


State 282

  203 jump_statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 304


State 283

  189 selection_statement: IF ROUND_BRACKET_OPEN • expression newstatement ROUND_BRACKET_CLOSE countinst statement newstatement
  190                    | IF ROUND_BRACKET_OPEN • expression newstatement ROUND_BRACKET_CLOSE countinst statement newstatement ELSE countinst statement

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 305


State 284

  206 jump_statement: RETURN expression_opt • SEMICOLON

    SEMICOLON  shift, and go to state 306


State 285

  191 selection_statement: SWITCH ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 307


State 286

  192 iteration_statement: WHILE whilestart • ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst loop_block
  193                    | WHILE whilestart • ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 308


State 287

  178 compound_statement: CURLY_BRACKET_OPEN createST • switch_table block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 134 (switch_table)

    switch_table  go to state 309


State 288

  175 labeled_statement: IDENTIFIER COLON • statement

    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    RETURN              shift, and go to state 238
    SIZEOF              shift, and go to state 65
    SWITCH              shift, and go to state 239
    WHILE               shift, and go to state 240
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    statement                  go to state 310
    labeled_statement          go to state 246
    compound_statement         go to state 247
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 289

  212 function_definition: declaration_specifiers declarator declaration_list_opt CURLY_BRACKET_OPEN switch_table block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 212 (function_definition)


State 290

  183 block_item_list: block_item_list countinst • block_item

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    DOUBLE              shift, and go to state 4
    EXTERN              shift, and go to state 5
    REGISTER            shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 11
    RETURN              shift, and go to state 238
    SHORT               shift, and go to state 12
    SIGNED              shift, and go to state 13
    SIZEOF              shift, and go to state 65
    STATIC              shift, and go to state 14
    SWITCH              shift, and go to state 239
    UNSIGNED            shift, and go to state 15
    VOID                shift, and go to state 16
    VOLATILE            shift, and go to state 17
    WHILE               shift, and go to state 240
    BOOL                shift, and go to state 18
    COMPLEX             shift, and go to state 19
    IMAGINARY           shift, and go to state 20
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    declaration                go to state 244
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 245
    labeled_statement          go to state 246
    compound_statement         go to state 247
    block_item                 go to state 311
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 291

  186 expression_statement: expression_opt SEMICOLON •

    $default  reduce using rule 186 (expression_statement)


State 292

  128 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 128 (direct_declarator)


State 293

  129 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 129 (direct_declarator)


State 294

  144 parameter_type_list: parameter_list COMMA ELLIPSIS •

    $default  reduce using rule 144 (parameter_type_list)


State 295

  146 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 146 (parameter_list)


State 296

   15 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list • CURLY_BRACKET_CLOSE
   16                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list • COMMA CURLY_BRACKET_CLOSE
  156 initializer_list: initializer_list • COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 312
    COMMA                shift, and go to state 313


State 297

  156 initializer_list: initializer_list COMMA designation_opt initializer •

    $default  reduce using rule 156 (initializer_list)


State 298

   20 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 20 (argument_expression_list)


State 299

   64 conditional_expression: logical_or_expression newstatement QUESTION countinst expression • newstatement COLON countinst conditional_expression
   80 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 181

    $default  reduce using rule 66 (newstatement)

    newstatement  go to state 314


State 300

  176 labeled_statement: CASE constant_expression COLON • statement

    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    RETURN              shift, and go to state 238
    SIZEOF              shift, and go to state 65
    SWITCH              shift, and go to state 239
    WHILE               shift, and go to state 240
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    statement                  go to state 315
    labeled_statement          go to state 246
    compound_statement         go to state 247
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 301

  177 labeled_statement: DEFAULT COLON statement •

    $default  reduce using rule 177 (labeled_statement)


State 302

  194 iteration_statement: DO dostart countinst • loop_block countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  195                    | DO dostart countinst • CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    RETURN              shift, and go to state 238
    SIZEOF              shift, and go to state 65
    SWITCH              shift, and go to state 239
    WHILE               shift, and go to state 240
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 316
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    loop_block                 go to state 317
    labeled_statement          go to state 318
    expression_statement       go to state 319
    expression_opt             go to state 252
    selection_statement        go to state 320
    iteration_statement        go to state 321
    jump_statement             go to state 322


State 303

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN • createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN • createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  198                    | FOR forstart ROUND_BRACKET_OPEN • createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN • createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 179 (createST)

    createST  go to state 323


State 304

  203 jump_statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 203 (jump_statement)


State 305

   80 expression: expression • COMMA assignment_expression
  189 selection_statement: IF ROUND_BRACKET_OPEN expression • newstatement ROUND_BRACKET_CLOSE countinst statement newstatement
  190                    | IF ROUND_BRACKET_OPEN expression • newstatement ROUND_BRACKET_CLOSE countinst statement newstatement ELSE countinst statement

    COMMA  shift, and go to state 181

    $default  reduce using rule 66 (newstatement)

    newstatement  go to state 324


State 306

  206 jump_statement: RETURN expression_opt SEMICOLON •

    $default  reduce using rule 206 (jump_statement)


State 307

   80 expression: expression • COMMA assignment_expression
  191 selection_statement: SWITCH ROUND_BRACKET_OPEN expression • ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 325
    COMMA                shift, and go to state 181


State 308

  192 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN • createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst loop_block
  193                    | WHILE whilestart ROUND_BRACKET_OPEN • createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 179 (createST)

    createST  go to state 326


State 309

  178 compound_statement: CURLY_BRACKET_OPEN createST switch_table • block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    DOUBLE              shift, and go to state 4
    EXTERN              shift, and go to state 5
    REGISTER            shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 11
    RETURN              shift, and go to state 238
    SHORT               shift, and go to state 12
    SIGNED              shift, and go to state 13
    SIZEOF              shift, and go to state 65
    STATIC              shift, and go to state 14
    SWITCH              shift, and go to state 239
    UNSIGNED            shift, and go to state 15
    VOID                shift, and go to state 16
    VOLATILE            shift, and go to state 17
    WHILE               shift, and go to state 240
    BOOL                shift, and go to state 18
    COMPLEX             shift, and go to state 19
    IMAGINARY           shift, and go to state 20
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    SEMICOLON  reduce using rule 187 (expression_opt)
    $default   reduce using rule 180 (block_item_list_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    declaration                go to state 244
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 245
    labeled_statement          go to state 246
    compound_statement         go to state 247
    block_item_list_opt        go to state 327
    block_item_list            go to state 249
    block_item                 go to state 250
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 310

  175 labeled_statement: IDENTIFIER COLON statement •

    $default  reduce using rule 175 (labeled_statement)


State 311

  183 block_item_list: block_item_list countinst block_item •

    $default  reduce using rule 183 (block_item_list)


State 312

   15 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE •

    $default  reduce using rule 15 (postfix_expression)


State 313

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA • CURLY_BRACKET_CLOSE
  156 initializer_list: initializer_list COMMA • designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 117
    CURLY_BRACKET_CLOSE  shift, and go to state 328
    DOT                  shift, and go to state 118

    $default  reduce using rule 158 (designation_opt)

    designation_opt  go to state 270
    designation      go to state 121
    designator_list  go to state 122
    designator       go to state 123


State 314

   64 conditional_expression: logical_or_expression newstatement QUESTION countinst expression newstatement • COLON countinst conditional_expression

    COLON  shift, and go to state 329


State 315

  176 labeled_statement: CASE constant_expression COLON statement •

    $default  reduce using rule 176 (labeled_statement)


State 316

  195 iteration_statement: DO dostart countinst CURLY_BRACKET_OPEN • block_item_list_opt CURLY_BRACKET_CLOSE countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    DOUBLE              shift, and go to state 4
    EXTERN              shift, and go to state 5
    REGISTER            shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 11
    RETURN              shift, and go to state 238
    SHORT               shift, and go to state 12
    SIGNED              shift, and go to state 13
    SIZEOF              shift, and go to state 65
    STATIC              shift, and go to state 14
    SWITCH              shift, and go to state 239
    UNSIGNED            shift, and go to state 15
    VOID                shift, and go to state 16
    VOLATILE            shift, and go to state 17
    WHILE               shift, and go to state 240
    BOOL                shift, and go to state 18
    COMPLEX             shift, and go to state 19
    IMAGINARY           shift, and go to state 20
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    SEMICOLON  reduce using rule 187 (expression_opt)
    $default   reduce using rule 180 (block_item_list_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    declaration                go to state 244
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 245
    labeled_statement          go to state 246
    compound_statement         go to state 247
    block_item_list_opt        go to state 330
    block_item_list            go to state 249
    block_item                 go to state 250
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 317

  194 iteration_statement: DO dostart countinst loop_block • countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 65 (countinst)

    countinst  go to state 331


State 318

  170 loop_block: labeled_statement •

    $default  reduce using rule 170 (loop_block)


State 319

  171 loop_block: expression_statement •

    $default  reduce using rule 171 (loop_block)


State 320

  172 loop_block: selection_statement •

    $default  reduce using rule 172 (loop_block)


State 321

  173 loop_block: iteration_statement •

    $default  reduce using rule 173 (loop_block)


State 322

  174 loop_block: jump_statement •

    $default  reduce using rule 174 (loop_block)


State 323

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST • switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST • switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  198                    | FOR forstart ROUND_BRACKET_OPEN createST • switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST • switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 134 (switch_table)

    switch_table  go to state 332


State 324

  189 selection_statement: IF ROUND_BRACKET_OPEN expression newstatement • ROUND_BRACKET_CLOSE countinst statement newstatement
  190                    | IF ROUND_BRACKET_OPEN expression newstatement • ROUND_BRACKET_CLOSE countinst statement newstatement ELSE countinst statement

    ROUND_BRACKET_CLOSE  shift, and go to state 333


State 325

  191 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE • statement

    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    RETURN              shift, and go to state 238
    SIZEOF              shift, and go to state 65
    SWITCH              shift, and go to state 239
    WHILE               shift, and go to state 240
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    statement                  go to state 334
    labeled_statement          go to state 246
    compound_statement         go to state 247
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 326

  192 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN createST • switch_table countinst expression ROUND_BRACKET_CLOSE countinst loop_block
  193                    | WHILE whilestart ROUND_BRACKET_OPEN createST • switch_table countinst expression ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 134 (switch_table)

    switch_table  go to state 335


State 327

  178 compound_statement: CURLY_BRACKET_OPEN createST switch_table block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 336


State 328

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE •

    $default  reduce using rule 16 (postfix_expression)


State 329

   64 conditional_expression: logical_or_expression newstatement QUESTION countinst expression newstatement COLON • countinst conditional_expression

    $default  reduce using rule 65 (countinst)

    countinst  go to state 337


State 330

  195 iteration_statement: DO dostart countinst CURLY_BRACKET_OPEN block_item_list_opt • CURLY_BRACKET_CLOSE countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    CURLY_BRACKET_CLOSE  shift, and go to state 338


State 331

  194 iteration_statement: DO dostart countinst loop_block countinst • WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    WHILE  shift, and go to state 339


State 332

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table • expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table • expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  198                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table • declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table • declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    EXTERN              shift, and go to state 5
    REGISTER            shift, and go to state 6
    FLOAT               shift, and go to state 7
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 11
    SHORT               shift, and go to state 12
    SIGNED              shift, and go to state 13
    SIZEOF              shift, and go to state 65
    STATIC              shift, and go to state 14
    UNSIGNED            shift, and go to state 15
    VOID                shift, and go to state 16
    VOLATILE            shift, and go to state 17
    BOOL                shift, and go to state 18
    COMPLEX             shift, and go to state 19
    IMAGINARY           shift, and go to state 20
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    declaration                go to state 340
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    expression_opt             go to state 341


State 333

  189 selection_statement: IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE • countinst statement newstatement
  190                    | IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE • countinst statement newstatement ELSE countinst statement

    $default  reduce using rule 65 (countinst)

    countinst  go to state 342


State 334

  191 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement •

    $default  reduce using rule 191 (selection_statement)


State 335

  192 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN createST switch_table • countinst expression ROUND_BRACKET_CLOSE countinst loop_block
  193                    | WHILE whilestart ROUND_BRACKET_OPEN createST switch_table • countinst expression ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (countinst)

    countinst  go to state 343


State 336

  178 compound_statement: CURLY_BRACKET_OPEN createST switch_table block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 178 (compound_statement)


State 337

   64 conditional_expression: logical_or_expression newstatement QUESTION countinst expression newstatement COLON countinst • conditional_expression

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 144
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 344


State 338

  195 iteration_statement: DO dostart countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE • countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 65 (countinst)

    countinst  go to state 345


State 339

  194 iteration_statement: DO dostart countinst loop_block countinst WHILE • ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 346


State 340

  198 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration • countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration • countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (countinst)

    countinst  go to state 347


State 341

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt • SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt • SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SEMICOLON  shift, and go to state 348


State 342

  189 selection_statement: IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst • statement newstatement
  190                    | IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst • statement newstatement ELSE countinst statement

    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    RETURN              shift, and go to state 238
    SIZEOF              shift, and go to state 65
    SWITCH              shift, and go to state 239
    WHILE               shift, and go to state 240
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    statement                  go to state 349
    labeled_statement          go to state 246
    compound_statement         go to state 247
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 343

  192 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst • expression ROUND_BRACKET_CLOSE countinst loop_block
  193                    | WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst • expression ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 350


State 344

   64 conditional_expression: logical_or_expression newstatement QUESTION countinst expression newstatement COLON countinst conditional_expression •

    $default  reduce using rule 64 (conditional_expression)


State 345

  195 iteration_statement: DO dostart countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE countinst • WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    WHILE  shift, and go to state 351


State 346

  194 iteration_statement: DO dostart countinst loop_block countinst WHILE ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE SEMICOLON

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 352


State 347

  198 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst • expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst • expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    expression_opt             go to state 353


State 348

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON • countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON • countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (countinst)

    countinst  go to state 354


State 349

  189 selection_statement: IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst statement • newstatement
  190                    | IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst statement • newstatement ELSE countinst statement

    $default  reduce using rule 66 (newstatement)

    newstatement  go to state 355


State 350

   80 expression: expression • COMMA assignment_expression
  192 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression • ROUND_BRACKET_CLOSE countinst loop_block
  193                    | WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression • ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 356
    COMMA                shift, and go to state 181


State 351

  195 iteration_statement: DO dostart countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE countinst WHILE • ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 357


State 352

   80 expression: expression • COMMA assignment_expression
  194 iteration_statement: DO dostart countinst loop_block countinst WHILE ROUND_BRACKET_OPEN expression • ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_CLOSE  shift, and go to state 358
    COMMA                shift, and go to state 181


State 353

  198 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt • SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt • SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SEMICOLON  shift, and go to state 359


State 354

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst • expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst • expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    expression_opt             go to state 360


State 355

  189 selection_statement: IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst statement newstatement •
  190                    | IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst statement newstatement • ELSE countinst statement

    ELSE  shift, and go to state 361

    $default  reduce using rule 189 (selection_statement)


State 356

  192 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE • countinst loop_block
  193                    | WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE • countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (countinst)

    countinst  go to state 362


State 357

  195 iteration_statement: DO dostart countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE countinst WHILE ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE SEMICOLON

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 363


State 358

  194 iteration_statement: DO dostart countinst loop_block countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE • SEMICOLON

    SEMICOLON  shift, and go to state 364


State 359

  198 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON • countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON • countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (countinst)

    countinst  go to state 365


State 360

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt • SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt • SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SEMICOLON  shift, and go to state 366


State 361

  190 selection_statement: IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst statement newstatement ELSE • countinst statement

    $default  reduce using rule 65 (countinst)

    countinst  go to state 367


State 362

  192 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst • loop_block
  193                    | WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst • CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    RETURN              shift, and go to state 238
    SIZEOF              shift, and go to state 65
    SWITCH              shift, and go to state 239
    WHILE               shift, and go to state 240
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 368
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    loop_block                 go to state 369
    labeled_statement          go to state 318
    expression_statement       go to state 319
    expression_opt             go to state 252
    selection_statement        go to state 320
    iteration_statement        go to state 321
    jump_statement             go to state 322


State 363

   80 expression: expression • COMMA assignment_expression
  195 iteration_statement: DO dostart countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE countinst WHILE ROUND_BRACKET_OPEN expression • ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_CLOSE  shift, and go to state 370
    COMMA                shift, and go to state 181


State 364

  194 iteration_statement: DO dostart countinst loop_block countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON •

    $default  reduce using rule 194 (iteration_statement)


State 365

  198 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst • expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst • expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    expression_opt             go to state 371


State 366

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON • countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON • countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (countinst)

    countinst  go to state 372


State 367

  190 selection_statement: IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst statement newstatement ELSE countinst • statement

    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    RETURN              shift, and go to state 238
    SIZEOF              shift, and go to state 65
    SWITCH              shift, and go to state 239
    WHILE               shift, and go to state 240
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    statement                  go to state 373
    labeled_statement          go to state 246
    compound_statement         go to state 247
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 368

  193 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN • block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    DOUBLE              shift, and go to state 4
    EXTERN              shift, and go to state 5
    REGISTER            shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 11
    RETURN              shift, and go to state 238
    SHORT               shift, and go to state 12
    SIGNED              shift, and go to state 13
    SIZEOF              shift, and go to state 65
    STATIC              shift, and go to state 14
    SWITCH              shift, and go to state 239
    UNSIGNED            shift, and go to state 15
    VOID                shift, and go to state 16
    VOLATILE            shift, and go to state 17
    WHILE               shift, and go to state 240
    BOOL                shift, and go to state 18
    COMPLEX             shift, and go to state 19
    IMAGINARY           shift, and go to state 20
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    SEMICOLON  reduce using rule 187 (expression_opt)
    $default   reduce using rule 180 (block_item_list_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    declaration                go to state 244
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 245
    labeled_statement          go to state 246
    compound_statement         go to state 247
    block_item_list_opt        go to state 374
    block_item_list            go to state 249
    block_item                 go to state 250
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 369

  192 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst loop_block •

    $default  reduce using rule 192 (iteration_statement)


State 370

  195 iteration_statement: DO dostart countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE • SEMICOLON

    SEMICOLON  shift, and go to state 375


State 371

  198 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt • newstatement ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt • newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 66 (newstatement)

    newstatement  go to state 376


State 372

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst • expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst • expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF              shift, and go to state 65
    ROUND_BRACKET_OPEN  shift, and go to state 66
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 76
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    expression_opt             go to state 377


State 373

  190 selection_statement: IF ROUND_BRACKET_OPEN expression newstatement ROUND_BRACKET_CLOSE countinst statement newstatement ELSE countinst statement •

    $default  reduce using rule 190 (selection_statement)


State 374

  193 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 378


State 375

  195 iteration_statement: DO dostart countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE countinst WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON •

    $default  reduce using rule 195 (iteration_statement)


State 376

  198 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement • ROUND_BRACKET_CLOSE countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement • ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 379


State 377

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt • newstatement ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt • newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 66 (newstatement)

    newstatement  go to state 380


State 378

  193 iteration_statement: WHILE whilestart ROUND_BRACKET_OPEN createST switch_table countinst expression ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 193 (iteration_statement)


State 379

  198 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE • countinst loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE • countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (countinst)

    countinst  go to state 381


State 380

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement • ROUND_BRACKET_CLOSE countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement • ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 382


State 381

  198 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst • loop_block
  199                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst • CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    RETURN              shift, and go to state 238
    SIZEOF              shift, and go to state 65
    SWITCH              shift, and go to state 239
    WHILE               shift, and go to state 240
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 383
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    loop_block                 go to state 384
    labeled_statement          go to state 318
    expression_statement       go to state 319
    expression_opt             go to state 252
    selection_statement        go to state 320
    iteration_statement        go to state 321
    jump_statement             go to state 322


State 382

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE • countinst loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE • countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (countinst)

    countinst  go to state 385


State 383

  199 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN • block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    DOUBLE              shift, and go to state 4
    EXTERN              shift, and go to state 5
    REGISTER            shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 11
    RETURN              shift, and go to state 238
    SHORT               shift, and go to state 12
    SIGNED              shift, and go to state 13
    SIZEOF              shift, and go to state 65
    STATIC              shift, and go to state 14
    SWITCH              shift, and go to state 239
    UNSIGNED            shift, and go to state 15
    VOID                shift, and go to state 16
    VOLATILE            shift, and go to state 17
    WHILE               shift, and go to state 240
    BOOL                shift, and go to state 18
    COMPLEX             shift, and go to state 19
    IMAGINARY           shift, and go to state 20
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    SEMICOLON  reduce using rule 187 (expression_opt)
    $default   reduce using rule 180 (block_item_list_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    declaration                go to state 244
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 245
    labeled_statement          go to state 246
    compound_statement         go to state 247
    block_item_list_opt        go to state 386
    block_item_list            go to state 249
    block_item                 go to state 250
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 384

  198 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block •

    $default  reduce using rule 198 (iteration_statement)


State 385

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst • loop_block
  197                    | FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst • CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    RETURN              shift, and go to state 238
    SIZEOF              shift, and go to state 65
    SWITCH              shift, and go to state 239
    WHILE               shift, and go to state 240
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 387
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    $default  reduce using rule 187 (expression_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    loop_block                 go to state 388
    labeled_statement          go to state 318
    expression_statement       go to state 319
    expression_opt             go to state 252
    selection_statement        go to state 320
    iteration_statement        go to state 321
    jump_statement             go to state 322


State 386

  199 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 389


State 387

  197 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN • block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 230
    CASE                shift, and go to state 231
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 232
    DEFAULT             shift, and go to state 233
    DO                  shift, and go to state 234
    DOUBLE              shift, and go to state 4
    EXTERN              shift, and go to state 5
    REGISTER            shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 235
    GOTO                shift, and go to state 236
    IF                  shift, and go to state 237
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 11
    RETURN              shift, and go to state 238
    SHORT               shift, and go to state 12
    SIGNED              shift, and go to state 13
    SIZEOF              shift, and go to state 65
    STATIC              shift, and go to state 14
    SWITCH              shift, and go to state 239
    UNSIGNED            shift, and go to state 15
    VOID                shift, and go to state 16
    VOLATILE            shift, and go to state 17
    WHILE               shift, and go to state 240
    BOOL                shift, and go to state 18
    COMPLEX             shift, and go to state 19
    IMAGINARY           shift, and go to state 20
    ROUND_BRACKET_OPEN  shift, and go to state 66
    CURLY_BRACKET_OPEN  shift, and go to state 241
    INCREMENT           shift, and go to state 68
    DECREMENT           shift, and go to state 69
    BITWISE_AND         shift, and go to state 70
    MUL                 shift, and go to state 71
    PLUS                shift, and go to state 72
    MINUS               shift, and go to state 73
    BITWISE_NOT         shift, and go to state 74
    NOT                 shift, and go to state 75
    IDENTIFIER          shift, and go to state 242
    INTEGER             shift, and go to state 77
    FLOATING_CONSTANT   shift, and go to state 78
    CHARACTER_CONSTANT  shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80

    SEMICOLON  reduce using rule 187 (expression_opt)
    $default   reduce using rule 180 (block_item_list_opt)

    constant                   go to state 81
    primary_expression         go to state 82
    postfix_expression         go to state 83
    unary_expression           go to state 84
    unary_operator             go to state 85
    cast_expression            go to state 86
    multiplicative_expression  go to state 87
    additive_expression        go to state 88
    shift_expression           go to state 89
    relational_expression      go to state 90
    equality_expression        go to state 91
    and_expression             go to state 92
    exclusive_or_expression    go to state 93
    inclusive_or_expression    go to state 94
    logical_and_expression     go to state 95
    logical_or_expression      go to state 96
    conditional_expression     go to state 97
    assignment_expression      go to state 111
    expression                 go to state 243
    declaration                go to state 244
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 245
    labeled_statement          go to state 246
    compound_statement         go to state 247
    block_item_list_opt        go to state 390
    block_item_list            go to state 249
    block_item                 go to state 250
    expression_statement       go to state 251
    expression_opt             go to state 252
    selection_statement        go to state 253
    iteration_statement        go to state 254
    jump_statement             go to state 255


State 388

  196 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst loop_block •

    $default  reduce using rule 196 (iteration_statement)


State 389

  199 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table declaration countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 199 (iteration_statement)


State 390

  197 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 391


State 391

  197 iteration_statement: FOR forstart ROUND_BRACKET_OPEN createST switch_table expression_opt SEMICOLON countinst expression_opt SEMICOLON countinst expression_opt newstatement ROUND_BRACKET_CLOSE countinst CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 197 (iteration_statement)
